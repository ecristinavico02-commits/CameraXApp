// Generated by view binder compiler. Do not edit!
package com.example.cameraxapp.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.ImageView;
import android.widget.ScrollView;
import android.widget.SeekBar;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.camera.view.PreviewView;
import androidx.constraintlayout.widget.Guideline;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.cameraxapp.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityConfColorBinding implements ViewBinding {
  @NonNull
  private final ScrollView rootView;

  @NonNull
  public final Button buttonSaveConfig;

  @NonNull
  public final Guideline guidelineLabelEnd;

  @NonNull
  public final TextView labelInferior;

  @NonNull
  public final TextView labelSuperior;

  @NonNull
  public final ImageView maskImageView;

  @NonNull
  public final PreviewView previewViewConf;

  @NonNull
  public final SeekBar seekBarHueHigh;

  @NonNull
  public final SeekBar seekBarHueLow;

  @NonNull
  public final SeekBar seekBarSaturationHigh;

  @NonNull
  public final SeekBar seekBarSaturationLow;

  @NonNull
  public final SeekBar seekBarValueHigh;

  @NonNull
  public final SeekBar seekBarValueLow;

  @NonNull
  public final TextView textViewTitle;

  @NonNull
  public final TextView tvHueHighLabel;

  @NonNull
  public final TextView tvHueHighValue;

  @NonNull
  public final TextView tvHueLowLabel;

  @NonNull
  public final TextView tvHueLowValue;

  @NonNull
  public final TextView tvSaturationHighLabel;

  @NonNull
  public final TextView tvSaturationHighValue;

  @NonNull
  public final TextView tvSaturationLowLabel;

  @NonNull
  public final TextView tvSaturationLowValue;

  @NonNull
  public final TextView tvValueHighLabel;

  @NonNull
  public final TextView tvValueHighValue;

  @NonNull
  public final TextView tvValueLowLabel;

  @NonNull
  public final TextView tvValueLowValue;

  private ActivityConfColorBinding(@NonNull ScrollView rootView, @NonNull Button buttonSaveConfig,
      @NonNull Guideline guidelineLabelEnd, @NonNull TextView labelInferior,
      @NonNull TextView labelSuperior, @NonNull ImageView maskImageView,
      @NonNull PreviewView previewViewConf, @NonNull SeekBar seekBarHueHigh,
      @NonNull SeekBar seekBarHueLow, @NonNull SeekBar seekBarSaturationHigh,
      @NonNull SeekBar seekBarSaturationLow, @NonNull SeekBar seekBarValueHigh,
      @NonNull SeekBar seekBarValueLow, @NonNull TextView textViewTitle,
      @NonNull TextView tvHueHighLabel, @NonNull TextView tvHueHighValue,
      @NonNull TextView tvHueLowLabel, @NonNull TextView tvHueLowValue,
      @NonNull TextView tvSaturationHighLabel, @NonNull TextView tvSaturationHighValue,
      @NonNull TextView tvSaturationLowLabel, @NonNull TextView tvSaturationLowValue,
      @NonNull TextView tvValueHighLabel, @NonNull TextView tvValueHighValue,
      @NonNull TextView tvValueLowLabel, @NonNull TextView tvValueLowValue) {
    this.rootView = rootView;
    this.buttonSaveConfig = buttonSaveConfig;
    this.guidelineLabelEnd = guidelineLabelEnd;
    this.labelInferior = labelInferior;
    this.labelSuperior = labelSuperior;
    this.maskImageView = maskImageView;
    this.previewViewConf = previewViewConf;
    this.seekBarHueHigh = seekBarHueHigh;
    this.seekBarHueLow = seekBarHueLow;
    this.seekBarSaturationHigh = seekBarSaturationHigh;
    this.seekBarSaturationLow = seekBarSaturationLow;
    this.seekBarValueHigh = seekBarValueHigh;
    this.seekBarValueLow = seekBarValueLow;
    this.textViewTitle = textViewTitle;
    this.tvHueHighLabel = tvHueHighLabel;
    this.tvHueHighValue = tvHueHighValue;
    this.tvHueLowLabel = tvHueLowLabel;
    this.tvHueLowValue = tvHueLowValue;
    this.tvSaturationHighLabel = tvSaturationHighLabel;
    this.tvSaturationHighValue = tvSaturationHighValue;
    this.tvSaturationLowLabel = tvSaturationLowLabel;
    this.tvSaturationLowValue = tvSaturationLowValue;
    this.tvValueHighLabel = tvValueHighLabel;
    this.tvValueHighValue = tvValueHighValue;
    this.tvValueLowLabel = tvValueLowLabel;
    this.tvValueLowValue = tvValueLowValue;
  }

  @Override
  @NonNull
  public ScrollView getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityConfColorBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityConfColorBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_conf_color, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityConfColorBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.buttonSaveConfig;
      Button buttonSaveConfig = ViewBindings.findChildViewById(rootView, id);
      if (buttonSaveConfig == null) {
        break missingId;
      }

      id = R.id.guideline_label_end;
      Guideline guidelineLabelEnd = ViewBindings.findChildViewById(rootView, id);
      if (guidelineLabelEnd == null) {
        break missingId;
      }

      id = R.id.labelInferior;
      TextView labelInferior = ViewBindings.findChildViewById(rootView, id);
      if (labelInferior == null) {
        break missingId;
      }

      id = R.id.labelSuperior;
      TextView labelSuperior = ViewBindings.findChildViewById(rootView, id);
      if (labelSuperior == null) {
        break missingId;
      }

      id = R.id.maskImageView;
      ImageView maskImageView = ViewBindings.findChildViewById(rootView, id);
      if (maskImageView == null) {
        break missingId;
      }

      id = R.id.previewViewConf;
      PreviewView previewViewConf = ViewBindings.findChildViewById(rootView, id);
      if (previewViewConf == null) {
        break missingId;
      }

      id = R.id.seekBarHueHigh;
      SeekBar seekBarHueHigh = ViewBindings.findChildViewById(rootView, id);
      if (seekBarHueHigh == null) {
        break missingId;
      }

      id = R.id.seekBarHueLow;
      SeekBar seekBarHueLow = ViewBindings.findChildViewById(rootView, id);
      if (seekBarHueLow == null) {
        break missingId;
      }

      id = R.id.seekBarSaturationHigh;
      SeekBar seekBarSaturationHigh = ViewBindings.findChildViewById(rootView, id);
      if (seekBarSaturationHigh == null) {
        break missingId;
      }

      id = R.id.seekBarSaturationLow;
      SeekBar seekBarSaturationLow = ViewBindings.findChildViewById(rootView, id);
      if (seekBarSaturationLow == null) {
        break missingId;
      }

      id = R.id.seekBarValueHigh;
      SeekBar seekBarValueHigh = ViewBindings.findChildViewById(rootView, id);
      if (seekBarValueHigh == null) {
        break missingId;
      }

      id = R.id.seekBarValueLow;
      SeekBar seekBarValueLow = ViewBindings.findChildViewById(rootView, id);
      if (seekBarValueLow == null) {
        break missingId;
      }

      id = R.id.textViewTitle;
      TextView textViewTitle = ViewBindings.findChildViewById(rootView, id);
      if (textViewTitle == null) {
        break missingId;
      }

      id = R.id.tvHueHighLabel;
      TextView tvHueHighLabel = ViewBindings.findChildViewById(rootView, id);
      if (tvHueHighLabel == null) {
        break missingId;
      }

      id = R.id.tvHueHighValue;
      TextView tvHueHighValue = ViewBindings.findChildViewById(rootView, id);
      if (tvHueHighValue == null) {
        break missingId;
      }

      id = R.id.tvHueLowLabel;
      TextView tvHueLowLabel = ViewBindings.findChildViewById(rootView, id);
      if (tvHueLowLabel == null) {
        break missingId;
      }

      id = R.id.tvHueLowValue;
      TextView tvHueLowValue = ViewBindings.findChildViewById(rootView, id);
      if (tvHueLowValue == null) {
        break missingId;
      }

      id = R.id.tvSaturationHighLabel;
      TextView tvSaturationHighLabel = ViewBindings.findChildViewById(rootView, id);
      if (tvSaturationHighLabel == null) {
        break missingId;
      }

      id = R.id.tvSaturationHighValue;
      TextView tvSaturationHighValue = ViewBindings.findChildViewById(rootView, id);
      if (tvSaturationHighValue == null) {
        break missingId;
      }

      id = R.id.tvSaturationLowLabel;
      TextView tvSaturationLowLabel = ViewBindings.findChildViewById(rootView, id);
      if (tvSaturationLowLabel == null) {
        break missingId;
      }

      id = R.id.tvSaturationLowValue;
      TextView tvSaturationLowValue = ViewBindings.findChildViewById(rootView, id);
      if (tvSaturationLowValue == null) {
        break missingId;
      }

      id = R.id.tvValueHighLabel;
      TextView tvValueHighLabel = ViewBindings.findChildViewById(rootView, id);
      if (tvValueHighLabel == null) {
        break missingId;
      }

      id = R.id.tvValueHighValue;
      TextView tvValueHighValue = ViewBindings.findChildViewById(rootView, id);
      if (tvValueHighValue == null) {
        break missingId;
      }

      id = R.id.tvValueLowLabel;
      TextView tvValueLowLabel = ViewBindings.findChildViewById(rootView, id);
      if (tvValueLowLabel == null) {
        break missingId;
      }

      id = R.id.tvValueLowValue;
      TextView tvValueLowValue = ViewBindings.findChildViewById(rootView, id);
      if (tvValueLowValue == null) {
        break missingId;
      }

      return new ActivityConfColorBinding((ScrollView) rootView, buttonSaveConfig,
          guidelineLabelEnd, labelInferior, labelSuperior, maskImageView, previewViewConf,
          seekBarHueHigh, seekBarHueLow, seekBarSaturationHigh, seekBarSaturationLow,
          seekBarValueHigh, seekBarValueLow, textViewTitle, tvHueHighLabel, tvHueHighValue,
          tvHueLowLabel, tvHueLowValue, tvSaturationHighLabel, tvSaturationHighValue,
          tvSaturationLowLabel, tvSaturationLowValue, tvValueHighLabel, tvValueHighValue,
          tvValueLowLabel, tvValueLowValue);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
